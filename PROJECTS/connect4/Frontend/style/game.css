td {
    width: 90px;
    height: 90px;
    border-radius: 50%;
    background-color: lightgray;
    padding: 5px;
}

table {
    border-collapse: separate;
    border-spacing: 12px;
}

.board {
    background: rgba(0, 0, 255, 75%);
    z-index: 1;
    border: 4px solid black;
}

aside.card {
    position: absolute;
    left: 1rem;
    padding: 2rem;
}

dt {
    margin-top: 2rem;
    font-weight: bold;
}

.badge {
    font-weight: bold;
    color: black;
    padding: 0.5rem;
    border-radius: 0.5rem;
    text-align: center;
}

.badge.red,
td.red {
    background-color: red;
}

.badge.yellow,
td.yellow {
    background-color: yellow;
}
.result{
    color: white;
    font-size: 35px;
    font-weight: bold;
}

.result {
    font-size: 3rem;
    font-weight: bold;
}

#gameHeader {
    margin: 0.5rem;
    background-color: rgba(255, 255, 255, 0.75);
    padding: 1rem;
    border-radius: 1rem;
}

.result.victory {
    color: green;
}

.result.defeat {
    color: red;
}

.result.draw {
    color: blue;
}

@media screen and (max-width: 1600px) {
    td {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background-color: lightgray;
        padding: 5px;
    }
}

main {
    flex-direction: column;
}

table td.winning {
    animation: highlight 1s ease-in-out infinite alternate;
}

@keyframes highlight {
    from {
        filter: brightness(1);
    }

    to {
        filter: brightness(0.5);
    }
}

.game-win-modal {
    border: 0;
    border-radius: 1rem;
    text-align: center;
    padding: 2.5rem;
    width: 50%;
}

dialog[open] {
    animation: animateDialog 1.25s ease-in-out;
}

dialog[open]::backdrop {
    /* background: rgba(0, 0, 0, 0); */
    animation: animateDialog 1.25s ease-in-out;
}

@keyframes animateDialog {
    from {
        transform: translate(0%, 225%);
    }

    to {
        transform: translate(0%, 0%);
    }
}

.blocked {
    cursor: not-allowed;
}

.possible-column {
    cursor: pointer;
    filter: brightness(1.25);
}

.blocked.possible-column {
    cursor: not-allowed;
    filter: brightness(1);
}